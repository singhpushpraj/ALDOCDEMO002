### YamlMime:BusinessCentralApplicationObject
fqName: System.Integration."Data Migration Error"
alId: ID 1797
namespace: System.Integration
baseKind: Table
kind: Table
parent: N:Module::Base_Application::Namespace::System.Integration
langs:
- al
seeAlso:
- '[Table](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-table-object)'
objectProperties:
- name: Caption
  value: Data Migration Error
  promoted: false
- name: ReplicateData
  value: "False"
  promoted: false
- name: DataClassification
  value: CustomerContent
  promoted: false
methods:
- syntax:
    content: 'procedure CreateEntryWithMessage(MigrationType: Text[250], DestinationTableId: Integer, SourceStagingTableRecordId: RecordId, ErrorMessage: Text[2048])'
    parameters:
    - id: MigrationType
      parameterType:
        name: Text[250]
        isExternal: true
    - id: DestinationTableId
      parameterType:
        name: Integer
        isExternal: true
    - id: SourceStagingTableRecordId
      parameterType:
        name: RecordId
        isExternal: true
    - id: ErrorMessage
      parameterType:
        name: Text[2048]
        isExternal: true
  name: CreateEntryWithMessage
  uid: M:Table::System#Integration#Data_Migration_Error.CreateEntryWithMessage(Text[250],Integer,RecordId,Text[2048])
- syntax:
    content: 'procedure CreateEntry(MigrationType: Text[250], DestinationTableId: Integer, SourceStagingTableRecordId: RecordId)'
    parameters:
    - id: MigrationType
      parameterType:
        name: Text[250]
        isExternal: true
    - id: DestinationTableId
      parameterType:
        name: Integer
        isExternal: true
    - id: SourceStagingTableRecordId
      parameterType:
        name: RecordId
        isExternal: true
  name: CreateEntry
  uid: M:Table::System#Integration#Data_Migration_Error.CreateEntry(Text[250],Integer,RecordId)
- syntax:
    content: 'procedure CreateEntryNoStagingTable(MigrationType: Text[250], DestinationTableId: Integer)'
    parameters:
    - id: MigrationType
      parameterType:
        name: Text[250]
        isExternal: true
    - id: DestinationTableId
      parameterType:
        name: Integer
        isExternal: true
  name: CreateEntryNoStagingTable
  uid: M:Table::System#Integration#Data_Migration_Error.CreateEntryNoStagingTable(Text[250],Integer)
- syntax:
    content: 'procedure CreateEntryNoStagingTableWithMessage(MigrationType: Text[250], DestinationTableId: Integer, ErrorMessage: Text[250])'
    parameters:
    - id: MigrationType
      parameterType:
        name: Text[250]
        isExternal: true
    - id: DestinationTableId
      parameterType:
        name: Integer
        isExternal: true
    - id: ErrorMessage
      parameterType:
        name: Text[250]
        isExternal: true
  name: CreateEntryNoStagingTableWithMessage
  uid: M:Table::System#Integration#Data_Migration_Error.CreateEntryNoStagingTableWithMessage(Text[250],Integer,Text[250])
- syntax:
    content: 'procedure ClearEntry(MigrationType: Text[250], DestinationTableId: Integer, SourceStagingTableRecordId: RecordId)'
    parameters:
    - id: MigrationType
      parameterType:
        name: Text[250]
        isExternal: true
    - id: DestinationTableId
      parameterType:
        name: Integer
        isExternal: true
    - id: SourceStagingTableRecordId
      parameterType:
        name: RecordId
        isExternal: true
  name: ClearEntry
  uid: M:Table::System#Integration#Data_Migration_Error.ClearEntry(Text[250],Integer,RecordId)
- syntax:
    content: 'procedure ClearEntryNoStagingTable(MigrationType: Text[250], DestinationTableId: Integer)'
    parameters:
    - id: MigrationType
      parameterType:
        name: Text[250]
        isExternal: true
    - id: DestinationTableId
      parameterType:
        name: Integer
        isExternal: true
  name: ClearEntryNoStagingTable
  uid: M:Table::System#Integration#Data_Migration_Error.ClearEntryNoStagingTable(Text[250],Integer)
- syntax:
    content: 'procedure FindEntry(MigrationType: Text[250], DestinationTableId: Integer, SourceStagingTableRecordId: RecordId): Boolean'
    parameters:
    - id: MigrationType
      parameterType:
        name: Text[250]
        isExternal: true
    - id: DestinationTableId
      parameterType:
        name: Integer
        isExternal: true
    - id: SourceStagingTableRecordId
      parameterType:
        name: RecordId
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: FindEntry
  uid: M:Table::System#Integration#Data_Migration_Error.FindEntry(Text[250],Integer,RecordId):Boolean
- syntax:
    content: 'procedure ExistsEntry(MigrationType: Text[250], DestinationTableId: Integer, SourceStagingTableRecordId: RecordId): Boolean'
    parameters:
    - id: MigrationType
      parameterType:
        name: Text[250]
        isExternal: true
    - id: DestinationTableId
      parameterType:
        name: Integer
        isExternal: true
    - id: SourceStagingTableRecordId
      parameterType:
        name: RecordId
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: ExistsEntry
  uid: M:Table::System#Integration#Data_Migration_Error.ExistsEntry(Text[250],Integer,RecordId):Boolean
- syntax:
    content: procedure Ignore()
  name: Ignore
  uid: M:Table::System#Integration#Data_Migration_Error.Ignore
- syntax:
    content: 'procedure GetErrorMessage(MigrationType: Text[250], SourceRecordId: RecordId, var ErrorMessage: Text[250])'
    parameters:
    - id: MigrationType
      parameterType:
        name: Text[250]
        isExternal: true
    - id: SourceRecordId
      parameterType:
        name: RecordId
        isExternal: true
    - id: ErrorMessage
      parameterType:
        name: Text[250]
        isExternal: true
  name: GetErrorMessage
  uid: M:Table::System#Integration#Data_Migration_Error.GetErrorMessage(Text[250],RecordId,Text[250]@)
- syntax:
    content: 'procedure GetFullExceptionMessage(): Text'
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetFullExceptionMessage
  uid: M:Table::System#Integration#Data_Migration_Error.GetFullExceptionMessage:Text
- syntax:
    content: 'procedure SetFullExceptionMessage(ExceptionMessage: Text)'
    parameters:
    - id: ExceptionMessage
      parameterType:
        name: Text
        isExternal: true
  name: SetFullExceptionMessage
  uid: M:Table::System#Integration#Data_Migration_Error.SetFullExceptionMessage(Text)
- syntax:
    content: 'procedure GetExceptionCallStack(): Text'
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetExceptionCallStack
  uid: M:Table::System#Integration#Data_Migration_Error.GetExceptionCallStack:Text
- syntax:
    content: 'procedure GetExceptionMessageWithStackTrace(): Text'
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetExceptionMessageWithStackTrace
  uid: M:Table::System#Integration#Data_Migration_Error.GetExceptionMessageWithStackTrace:Text
- syntax:
    content: 'procedure SetExceptionCallStack(ExceptionCallStack: Text)'
    parameters:
    - id: ExceptionCallStack
      parameterType:
        name: Text
        isExternal: true
  name: SetExceptionCallStack
  uid: M:Table::System#Integration#Data_Migration_Error.SetExceptionCallStack(Text)
- syntax:
    content: 'procedure SetLastRecordUnderProcessingLog(RecordsUnderProcessingLog: Text)'
    parameters:
    - id: RecordsUnderProcessingLog
      parameterType:
        name: Text
        isExternal: true
  name: SetLastRecordUnderProcessingLog
  uid: M:Table::System#Integration#Data_Migration_Error.SetLastRecordUnderProcessingLog(Text)
- syntax:
    content: 'procedure GetLastRecordsUnderProcessingLog(): Text'
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetLastRecordsUnderProcessingLog
  uid: M:Table::System#Integration#Data_Migration_Error.GetLastRecordsUnderProcessingLog:Text
fields:
- type:
    name: Integer
    isExternal: true
  name: Id
  uid: F:Table::System#Integration#Data_Migration_Error.Id
- type:
    name: Text[250]
    isExternal: true
  name: '"Migration Type"'
  uid: F:Table::System#Integration#Data_Migration_Error.Migration_Type[250]
- type:
    name: Integer
    isExternal: true
  name: '"Destination Table ID"'
  uid: F:Table::System#Integration#Data_Migration_Error.Destination_Table_ID
- type:
    name: RecordId
    isExternal: true
  name: '"Source Staging Table Record ID"'
  uid: F:Table::System#Integration#Data_Migration_Error.Source_Staging_Table_Record_ID
- type:
    name: Text[250]
    isExternal: true
  name: '"Error Message"'
  uid: F:Table::System#Integration#Data_Migration_Error.Error_Message[250]
- type:
    name: Boolean
    isExternal: true
  name: '"Scheduled For Retry"'
  uid: F:Table::System#Integration#Data_Migration_Error.Scheduled_For_Retry
- type:
    name: Boolean
    isExternal: true
  name: '"Error Dismissed"'
  uid: F:Table::System#Integration#Data_Migration_Error.Error_Dismissed
- type:
    name: Blob
    isExternal: true
  name: '"Exception Message"'
  uid: F:Table::System#Integration#Data_Migration_Error.Exception_Message
- type:
    name: Blob
    isExternal: true
  name: '"Exception Call Stack"'
  uid: F:Table::System#Integration#Data_Migration_Error.Exception_Call_Stack
- type:
    name: Text[2048]
    isExternal: true
  name: '"Last Record Under Processing"'
  uid: F:Table::System#Integration#Data_Migration_Error.Last_Record_Under_Processing[2048]
- type:
    name: Blob
    isExternal: true
  name: '"Records Under Processing Log"'
  uid: F:Table::System#Integration#Data_Migration_Error.Records_Under_Processing_Log
- type:
    name: Guid
    isExternal: true
  name: SystemId
  uid: F:Table::System#Integration#Data_Migration_Error.SystemId
- type:
    name: DateTime
    isExternal: true
  name: SystemCreatedAt
  uid: F:Table::System#Integration#Data_Migration_Error.SystemCreatedAt
- type:
    name: Guid
    isExternal: true
  name: SystemCreatedBy
  uid: F:Table::System#Integration#Data_Migration_Error.SystemCreatedBy
- type:
    name: DateTime
    isExternal: true
  name: SystemModifiedAt
  uid: F:Table::System#Integration#Data_Migration_Error.SystemModifiedAt
- type:
    name: Guid
    isExternal: true
  name: SystemModifiedBy
  uid: F:Table::System#Integration#Data_Migration_Error.SystemModifiedBy
- type:
    name: BigInteger
    isExternal: true
  name: SystemRowVersion
  uid: F:Table::System#Integration#Data_Migration_Error.SystemRowVersion
commentId: O:Table::System#Integration#Data Migration Error
name: '"Data Migration Error"'
uid: O:Table::System#Integration#Data_Migration_Error
