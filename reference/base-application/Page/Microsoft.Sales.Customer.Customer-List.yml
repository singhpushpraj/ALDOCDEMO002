### YamlMime:BusinessCentralApplicationObject
fqName: Microsoft.Sales.Customer."Customer List"
alId: ID 22
namespace: Microsoft.Sales.Customer
baseKind: Page
kind: Page
parent: N:Module::Base_Application::Namespace::Microsoft.Sales.Customer
langs:
- al
sourceTableType:
  internalReference: O:Table::Microsoft#Sales#Customer#Customer
  name: Microsoft.Sales.Customer.Customer
  isExternal: false
seeAlso:
- '[Page](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-page-object)'
objectProperties:
- name: ApplicationArea
  value: '#Basic,#Suite,#Service'
  promoted: false
- name: Caption
  value: Customers
  promoted: false
- name: CardPageID
  value: Customer Card
  promoted: false
  xrefType:
    internalReference: O:Page::Microsoft#Sales#Customer#Customer_Card
    name: Microsoft.Sales.Customer."Customer Card"
    isExternal: false
- name: Editable
  value: "False"
  promoted: false
- name: PageType
  value: List
  promoted: true
- name: QueryCategory
  value: Customer List
  promoted: false
- name: SourceTable
  value: "18"
  promoted: true
  xrefType:
    internalReference: O:Table::Microsoft#Sales#Customer#Customer
    name: Microsoft.Sales.Customer.Customer
    isExternal: false
- name: UsageCategory
  value: Lists
  promoted: false
- name: AdditionalSearchTerms
  value: Customer Profile, Client Details, Buyer Information, Customer Data, Customer View, Client Profile, Customer Detail, Client Info
  promoted: false
- name: AboutTitle
  value: About customers
  promoted: false
- name: AboutText
  value: Here you overview all registered customers, their balances, and the sales statistics. With [Customer Templates](?page=1381 "Opens the Customer Templates") you can quickly create new customers having common details defined by the template.
  promoted: false
methods:
- syntax:
    content: 'procedure GetSelectionFilter(): Text'
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetSelectionFilter
  uid: M:Page::Microsoft#Sales#Customer#Customer_List.GetSelectionFilter:Text
- syntax:
    content: 'procedure SetSelection(var Cust: Record Customer)'
    parameters:
    - id: Cust
      parameterType:
        name: Record Customer
        isExternal: true
  name: SetSelection
  uid: M:Page::Microsoft#Sales#Customer#Customer_List.SetSelection(Customer@)
events:
- syntax:
    signatures:
    - '[IntegrationEvent(False,False)]'
    content: 'procedure OnAfterGetSelectionFilter(var Customer: Record Customer, var SelectionFilterForCustomer: Text)'
    parameters:
    - id: Customer
      parameterType:
        name: Record Customer
        isExternal: true
    - id: SelectionFilterForCustomer
      parameterType:
        name: Text
        isExternal: true
  name: OnAfterGetSelectionFilter
  uid: M:Page::Microsoft#Sales#Customer#Customer_List.OnAfterGetSelectionFilter(Customer@,Text@)
commentId: O:Page::Microsoft#Sales#Customer#Customer List
name: '"Customer List"'
uid: O:Page::Microsoft#Sales#Customer#Customer_List
