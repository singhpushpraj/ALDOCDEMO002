### YamlMime:BusinessCentralApplicationObject
fqName: System.Security.AccessControl."Permission Pages Mgt."
alId: ID 9001
namespace: System.Security.AccessControl
baseKind: Codeunit
kind: Codeunit
parent: N:Module::Base_Application::Namespace::System.Security.AccessControl
langs:
- al
seeAlso:
- '[Codeunit](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-codeunit-object)'
methods:
- syntax:
    content: 'procedure Init(NewNoOfRecords: Integer, NewNoOfColumns: Integer)'
    parameters:
    - id: NewNoOfRecords
      parameterType:
        name: Integer
        isExternal: true
    - id: NewNoOfColumns
      parameterType:
        name: Integer
        isExternal: true
  name: Init
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.Init(Integer,Integer)
- syntax:
    content: 'procedure GetOffset(): Integer'
    return:
      returnType:
        name: Integer
        isExternal: true
  name: GetOffset
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.GetOffset:Integer
- syntax:
    content: procedure AllColumnsLeft()
  name: AllColumnsLeft
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.AllColumnsLeft
- syntax:
    content: procedure ColumnLeft()
  name: ColumnLeft
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.ColumnLeft
- syntax:
    content: procedure ColumnRight()
  name: ColumnRight
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.ColumnRight
- syntax:
    content: procedure AllColumnsRight()
  name: AllColumnsRight
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.AllColumnsRight
- syntax:
    content: 'procedure IsInColumnsRange(i: Integer): Boolean'
    parameters:
    - id: i
      parameterType:
        name: Integer
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsInColumnsRange
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.IsInColumnsRange(Integer):Boolean
- syntax:
    content: 'procedure IsPastColumnRange(i: Integer): Boolean'
    parameters:
    - id: i
      parameterType:
        name: Integer
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsPastColumnRange
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.IsPastColumnRange(Integer):Boolean
- syntax:
    content: 'procedure IsPermissionSetEditable(AggregatePermissionSet: __MissingTypeSymbol__): Boolean'
    parameters:
    - id: AggregatePermissionSet
      parameterType:
        name: __MissingTypeSymbol__
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsPermissionSetEditable
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.IsPermissionSetEditable(__MissingSymbol__):Boolean
- syntax:
    content: 'procedure VerifyPermissionSetRoleID(RoleID: Code[20])'
    parameters:
    - id: RoleID
      parameterType:
        name: Code[20]
        isExternal: true
  name: VerifyPermissionSetRoleID
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.VerifyPermissionSetRoleID(Code[20])
- syntax:
    content: procedure CheckAndRaiseNotificationIfAppDBPermissionSetsChanged()
  name: CheckAndRaiseNotificationIfAppDBPermissionSetsChanged
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.CheckAndRaiseNotificationIfAppDBPermissionSetsChanged
- syntax:
    content: 'procedure IsTenantPermissionSetEditable(TenantPermissionSet: __MissingTypeSymbol__): Boolean'
    parameters:
    - id: TenantPermissionSet
      parameterType:
        name: __MissingTypeSymbol__
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsTenantPermissionSetEditable
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.IsTenantPermissionSetEditable(__MissingSymbol__):Boolean
- syntax:
    content: 'procedure ShowSecurityFilterForPermission(var OutputSecurityFilter: Text, Permission: __MissingTypeSymbol__): Boolean'
    parameters:
    - id: OutputSecurityFilter
      parameterType:
        name: Text
        isExternal: true
    - id: Permission
      parameterType:
        name: __MissingTypeSymbol__
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: ShowSecurityFilterForPermission
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.ShowSecurityFilterForPermission(Text@,__MissingSymbol__):Boolean
- syntax:
    content: 'procedure ShowSecurityFilterForTenantPermission(var OutputSecurityFilter: Text, TenantPermission: __MissingTypeSymbol__, UserCanEditSecurityFilters: Boolean): Boolean'
    parameters:
    - id: OutputSecurityFilter
      parameterType:
        name: Text
        isExternal: true
    - id: TenantPermission
      parameterType:
        name: __MissingTypeSymbol__
        isExternal: true
    - id: UserCanEditSecurityFilters
      parameterType:
        name: Boolean
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: ShowSecurityFilterForTenantPermission
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.ShowSecurityFilterForTenantPermission(Text@,__MissingSymbol__,Boolean):Boolean
- syntax:
    content: 'procedure AppDbPermissionSetChangedShowDetails(Notification: Notification)'
    parameters:
    - id: Notification
      parameterType:
        name: Notification
        isExternal: true
  name: AppDbPermissionSetChangedShowDetails
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.AppDbPermissionSetChangedShowDetails(Notification)
- syntax:
    content: 'procedure AppDbPermissionSetChangedDisableNotification(Notification: Notification)'
    parameters:
    - id: Notification
      parameterType:
        name: Notification
        isExternal: true
  name: AppDbPermissionSetChangedDisableNotification
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.AppDbPermissionSetChangedDisableNotification(Notification)
- syntax:
    content: 'procedure AppDbPermissionChangedNotificationEnabled(): Boolean'
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: AppDbPermissionChangedNotificationEnabled
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.AppDbPermissionChangedNotificationEnabled:Boolean
- syntax:
    content: procedure DisallowEditingPermissionSetsForNonAdminUsers()
  name: DisallowEditingPermissionSetsForNonAdminUsers
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.DisallowEditingPermissionSetsForNonAdminUsers
- syntax:
    content: procedure RaiseNotificationThatSecurityFilterNotEditableForSystemAndExtension()
  name: RaiseNotificationThatSecurityFilterNotEditableForSystemAndExtension
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.RaiseNotificationThatSecurityFilterNotEditableForSystemAndExtension
- syntax:
    content: 'procedure CannotEditPermissionSetsNotificationEnabled(): Boolean'
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: CannotEditPermissionSetsNotificationEnabled
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.CannotEditPermissionSetsNotificationEnabled:Boolean
- syntax:
    content: 'procedure CannotEditPermissionSetsDisableNotification(Notification: Notification)'
    parameters:
    - id: Notification
      parameterType:
        name: Notification
        isExternal: true
  name: CannotEditPermissionSetsDisableNotification
  uid: M:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#.CannotEditPermissionSetsDisableNotification(Notification)
commentId: O:Codeunit::System#Security#AccessControl#Permission Pages Mgt#
name: '"Permission Pages Mgt."'
uid: O:Codeunit::System#Security#AccessControl#Permission_Pages_Mgt#
