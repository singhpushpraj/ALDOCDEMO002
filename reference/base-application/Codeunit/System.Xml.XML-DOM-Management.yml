### YamlMime:BusinessCentralApplicationObject
fqName: System.Xml."XML DOM Management"
alId: ID 6224
namespace: System.Xml
baseKind: Codeunit
kind: Codeunit
parent: N:Module::Base_Application::Namespace::System.Xml
langs:
- al
seeAlso:
- '[Codeunit](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-codeunit-object)'
methods:
- syntax:
    content: 'procedure AddElement(var ParentXmlNode: XmlNode, NodeName: Text, NodeText: Text, NameSpace: Text, var CreatedXmlNode: XmlNode): Boolean'
    parameters:
    - id: ParentXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    - id: NodeName
      parameterType:
        name: Text
        isExternal: true
    - id: NodeText
      parameterType:
        name: Text
        isExternal: true
    - id: NameSpace
      parameterType:
        name: Text
        isExternal: true
    - id: CreatedXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: AddElement
  uid: M:Codeunit::System#Xml#XML_DOM_Management.AddElement(XmlNode@,Text,Text,Text,XmlNode@):Boolean
- syntax:
    content: 'procedure AddRootElement(var RootXmlDocument: XmlDocument, NodeName: Text, var CreatedXmlNode: XmlNode): Boolean'
    parameters:
    - id: RootXmlDocument
      parameterType:
        name: XmlDocument
        isExternal: true
    - id: NodeName
      parameterType:
        name: Text
        isExternal: true
    - id: CreatedXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: AddRootElement
  uid: M:Codeunit::System#Xml#XML_DOM_Management.AddRootElement(XmlDocument@,Text,XmlNode@):Boolean
- syntax:
    content: 'procedure AddRootElementWithPrefix(var RootXmlDocument: XmlDocument, NodeName: Text, Prefix: Text, NameSpace: Text, var CreatedXmlNode: XmlNode): Boolean'
    parameters:
    - id: RootXmlDocument
      parameterType:
        name: XmlDocument
        isExternal: true
    - id: NodeName
      parameterType:
        name: Text
        isExternal: true
    - id: Prefix
      parameterType:
        name: Text
        isExternal: true
    - id: NameSpace
      parameterType:
        name: Text
        isExternal: true
    - id: CreatedXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: AddRootElementWithPrefix
  uid: M:Codeunit::System#Xml#XML_DOM_Management.AddRootElementWithPrefix(XmlDocument@,Text,Text,Text,XmlNode@):Boolean
- syntax:
    content: 'procedure AddElementWithPrefix(var ParentXmlNode: XmlNode, NodeName: Text, NodeText: Text, Prefix: Text, NameSpace: Text, var CreatedXmlNode: XmlNode): Boolean'
    parameters:
    - id: ParentXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    - id: NodeName
      parameterType:
        name: Text
        isExternal: true
    - id: NodeText
      parameterType:
        name: Text
        isExternal: true
    - id: Prefix
      parameterType:
        name: Text
        isExternal: true
    - id: NameSpace
      parameterType:
        name: Text
        isExternal: true
    - id: CreatedXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: AddElementWithPrefix
  uid: M:Codeunit::System#Xml#XML_DOM_Management.AddElementWithPrefix(XmlNode@,Text,Text,Text,Text,XmlNode@):Boolean
- syntax:
    signatures:
    - '[TryFunction]'
    content: 'procedure AddAttribute(var ParentXmlNode: XmlNode, Name: Text, NodeValue: Text): Boolean'
    parameters:
    - id: ParentXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    - id: Name
      parameterType:
        name: Text
        isExternal: true
    - id: NodeValue
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: AddAttribute
  uid: M:Codeunit::System#Xml#XML_DOM_Management.AddAttribute(XmlNode@,Text,Text):Boolean
- syntax:
    content: 'procedure AddAttributeWithPrefix(var ParentXmlNode: XmlNode, Name: Text, Prefix: Text, NameSpace: Text, NodeValue: Text): Boolean'
    parameters:
    - id: ParentXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    - id: Name
      parameterType:
        name: Text
        isExternal: true
    - id: Prefix
      parameterType:
        name: Text
        isExternal: true
    - id: NameSpace
      parameterType:
        name: Text
        isExternal: true
    - id: NodeValue
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: AddAttributeWithPrefix
  uid: M:Codeunit::System#Xml#XML_DOM_Management.AddAttributeWithPrefix(XmlNode@,Text,Text,Text,Text):Boolean
- syntax:
    content: 'procedure AddNamespaceDeclaration(var ParentXmlNode: XmlNode, Prefix: Text, NameSpace: Text): Boolean'
    parameters:
    - id: ParentXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    - id: Prefix
      parameterType:
        name: Text
        isExternal: true
    - id: NameSpace
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: AddNamespaceDeclaration
  uid: M:Codeunit::System#Xml#XML_DOM_Management.AddNamespaceDeclaration(XmlNode@,Text,Text):Boolean
- syntax:
    content: 'procedure FindNode(RootXmlNode: XmlNode, NodePath: Text, var FoundXmlNode: XmlNode): Boolean'
    parameters:
    - id: RootXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    - id: NodePath
      parameterType:
        name: Text
        isExternal: true
    - id: FoundXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: FindNode
  uid: M:Codeunit::System#Xml#XML_DOM_Management.FindNode(XmlNode,Text,XmlNode@):Boolean
- syntax:
    content: 'procedure FindNodeWithNamespace(RootXmlNode: XmlNode, NodePath: Text, Prefix: Text, Namespace: Text, var FoundXmlNode: XmlNode): Boolean'
    parameters:
    - id: RootXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    - id: NodePath
      parameterType:
        name: Text
        isExternal: true
    - id: Prefix
      parameterType:
        name: Text
        isExternal: true
    - id: Namespace
      parameterType:
        name: Text
        isExternal: true
    - id: FoundXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: FindNodeWithNamespace
  uid: M:Codeunit::System#Xml#XML_DOM_Management.FindNodeWithNamespace(XmlNode,Text,Text,Text,XmlNode@):Boolean
- syntax:
    content: 'procedure FindNodesWithNamespace(RootXmlNode: XmlNode, XPath: Text, Prefix: Text, Namespace: Text, var FoundXmlNodeList: XmlNodeList): Boolean'
    parameters:
    - id: RootXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    - id: XPath
      parameterType:
        name: Text
        isExternal: true
    - id: Prefix
      parameterType:
        name: Text
        isExternal: true
    - id: Namespace
      parameterType:
        name: Text
        isExternal: true
    - id: FoundXmlNodeList
      parameterType:
        name: XmlNodeList
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: FindNodesWithNamespace
  uid: M:Codeunit::System#Xml#XML_DOM_Management.FindNodesWithNamespace(XmlNode,Text,Text,Text,XmlNodeList@):Boolean
- syntax:
    content: 'procedure FindNodesWithNamespaceManager(RootXmlNode: XmlNode, XPath: Text, XmlNamespaceManager: XmlNamespaceManager, var FoundXmlNodeList: XmlNodeList): Boolean'
    parameters:
    - id: RootXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    - id: XPath
      parameterType:
        name: Text
        isExternal: true
    - id: XmlNamespaceManager
      parameterType:
        name: XmlNamespaceManager
        isExternal: true
    - id: FoundXmlNodeList
      parameterType:
        name: XmlNodeList
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: FindNodesWithNamespaceManager
  uid: M:Codeunit::System#Xml#XML_DOM_Management.FindNodesWithNamespaceManager(XmlNode,Text,XmlNamespaceManager,XmlNodeList@):Boolean
- syntax:
    content: 'procedure GetAttributeValue(ParentXmlNode: XmlNode, AttributeName: Text): Text'
    parameters:
    - id: ParentXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    - id: AttributeName
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetAttributeValue
  uid: M:Codeunit::System#Xml#XML_DOM_Management.GetAttributeValue(XmlNode,Text):Text
- syntax:
    content: 'procedure GetAttributeValue(ParentXmlNode: XmlNode, AttributeName: Text, Namespace: Text): Text'
    parameters:
    - id: ParentXmlNode
      parameterType:
        name: XmlNode
        isExternal: true
    - id: AttributeName
      parameterType:
        name: Text
        isExternal: true
    - id: Namespace
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetAttributeValue
  uid: M:Codeunit::System#Xml#XML_DOM_Management.GetAttributeValue(XmlNode,Text,Text):Text
- syntax:
    content: 'procedure IsValidXMLNameStartCharacter(InputChar: Char): Boolean'
    parameters:
    - id: InputChar
      parameterType:
        name: Char
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsValidXMLNameStartCharacter
  uid: M:Codeunit::System#Xml#XML_DOM_Management.IsValidXMLNameStartCharacter(Char):Boolean
- syntax:
    content: 'procedure IsValidXMLNameCharacter(InputChar: Char): Boolean'
    parameters:
    - id: InputChar
      parameterType:
        name: Char
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsValidXMLNameCharacter
  uid: M:Codeunit::System#Xml#XML_DOM_Management.IsValidXMLNameCharacter(Char):Boolean
- syntax:
    content: 'procedure IsXMLRestrictedCharacter(InputChar: Char): Boolean'
    parameters:
    - id: InputChar
      parameterType:
        name: Char
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsXMLRestrictedCharacter
  uid: M:Codeunit::System#Xml#XML_DOM_Management.IsXMLRestrictedCharacter(Char):Boolean
- syntax:
    content: 'procedure XMLEscape(Text: Text): Text'
    parameters:
    - id: Text
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: XMLEscape
  uid: M:Codeunit::System#Xml#XML_DOM_Management.XMLEscape(Text):Text
- syntax:
    content: 'procedure GetUTF8BOMSymbols(): Text'
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetUTF8BOMSymbols
  uid: M:Codeunit::System#Xml#XML_DOM_Management.GetUTF8BOMSymbols:Text
- syntax:
    content: 'procedure ClearUTF8BOMSymbols(var XmlText: Text)'
    parameters:
    - id: XmlText
      parameterType:
        name: Text
        isExternal: true
  name: ClearUTF8BOMSymbols
  uid: M:Codeunit::System#Xml#XML_DOM_Management.ClearUTF8BOMSymbols(Text@)
- syntax:
    content: 'procedure GetRelativePath(NodePath: Text, BasePath: Text): Text'
    parameters:
    - id: NodePath
      parameterType:
        name: Text
        isExternal: true
    - id: BasePath
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetRelativePath
  uid: M:Codeunit::System#Xml#XML_DOM_Management.GetRelativePath(Text,Text):Text
- syntax:
    content: 'procedure ReplaceXMLInvalidCharacters(InputText: Text, ReplaceChar: Char): Text'
    parameters:
    - id: InputText
      parameterType:
        name: Text
        isExternal: true
    - id: ReplaceChar
      parameterType:
        name: Char
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: ReplaceXMLInvalidCharacters
  uid: M:Codeunit::System#Xml#XML_DOM_Management.ReplaceXMLInvalidCharacters(Text,Char):Text
- syntax:
    signatures:
    - '[TryFunction]'
    content: 'procedure TryTransformXMLToOutStream(var XmlInStream: InStream, var XslInStream: InStream, var XmlOutStream: OutStream): Boolean'
    parameters:
    - id: XmlInStream
      parameterType:
        name: InStream
        isExternal: true
    - id: XslInStream
      parameterType:
        name: InStream
        isExternal: true
    - id: XmlOutStream
      parameterType:
        name: OutStream
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: TryTransformXMLToOutStream
  uid: M:Codeunit::System#Xml#XML_DOM_Management.TryTransformXMLToOutStream(InStream@,InStream@,OutStream@):Boolean
- syntax:
    content: 'procedure TransformXMLText(XmlInText: Text, XslInText: Text): Text'
    parameters:
    - id: XmlInText
      parameterType:
        name: Text
        isExternal: true
    - id: XslInText
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: TransformXMLText
  uid: M:Codeunit::System#Xml#XML_DOM_Management.TransformXMLText(Text,Text):Text
- syntax:
    signatures:
    - '[TryFunction]'
    content: 'procedure TryGetXMLAsText(InStream: InStream, var Xml: Text): Boolean'
    parameters:
    - id: InStream
      parameterType:
        name: InStream
        isExternal: true
    - id: Xml
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: TryGetXMLAsText
  uid: M:Codeunit::System#Xml#XML_DOM_Management.TryGetXMLAsText(InStream,Text@):Boolean
- syntax:
    signatures:
    - '[TryFunction]'
    content: 'procedure TryFormatXML(XMLText: Text, var FormattedXMLText: Text): Boolean'
    parameters:
    - id: XMLText
      parameterType:
        name: Text
        isExternal: true
    - id: FormattedXMLText
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: TryFormatXML
  uid: M:Codeunit::System#Xml#XML_DOM_Management.TryFormatXML(Text,Text@):Boolean
- syntax:
    content: 'procedure RemoveNamespaces(XMLText: Text): Text'
    parameters:
    - id: XMLText
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: RemoveNamespaces
  uid: M:Codeunit::System#Xml#XML_DOM_Management.RemoveNamespaces(Text):Text
- syntax:
    content: 'procedure CreateXslTransformFromBlob(TempBlob: __MissingTypeSymbol__, var DotNet_XslCompiledTransform: Codeunit DotNet_XslCompiledTransform)'
    parameters:
    - id: TempBlob
      parameterType:
        name: __MissingTypeSymbol__
        isExternal: true
    - id: DotNet_XslCompiledTransform
      parameterType:
        internalReference: O:Codeunit::System#Xml#DotNet_XslCompiledTransform
        name: System.Xml.DotNet_XslCompiledTransform
        isExternal: false
  name: CreateXslTransformFromBlob
  uid: M:Codeunit::System#Xml#XML_DOM_Management.CreateXslTransformFromBlob(__MissingSymbol__@,Codeunit::System#Xml#DotNet_XslCompiledTransform@)
- syntax:
    content: 'procedure XslCompiledTransformToBlob(var DotNet_XslCompiledTransform: Codeunit DotNet_XslCompiledTransform, TempBlob: __MissingTypeSymbol__, var DestinationStream: OutStream)'
    parameters:
    - id: DotNet_XslCompiledTransform
      parameterType:
        internalReference: O:Codeunit::System#Xml#DotNet_XslCompiledTransform
        name: System.Xml.DotNet_XslCompiledTransform
        isExternal: false
    - id: TempBlob
      parameterType:
        name: __MissingTypeSymbol__
        isExternal: true
    - id: DestinationStream
      parameterType:
        name: OutStream
        isExternal: true
  name: XslCompiledTransformToBlob
  uid: M:Codeunit::System#Xml#XML_DOM_Management.XslCompiledTransformToBlob(Codeunit::System#Xml#DotNet_XslCompiledTransform@,__MissingSymbol__@,OutStream@)
- syntax:
    content: 'procedure XslCompiledTransformToStream(var DotNet_XslCompiledTransform: Codeunit DotNet_XslCompiledTransform, var SourceXmlStream: InStream, var DestinationStream: OutStream)'
    parameters:
    - id: DotNet_XslCompiledTransform
      parameterType:
        internalReference: O:Codeunit::System#Xml#DotNet_XslCompiledTransform
        name: System.Xml.DotNet_XslCompiledTransform
        isExternal: false
    - id: SourceXmlStream
      parameterType:
        name: InStream
        isExternal: true
    - id: DestinationStream
      parameterType:
        name: OutStream
        isExternal: true
  name: XslCompiledTransformToStream
  uid: M:Codeunit::System#Xml#XML_DOM_Management.XslCompiledTransformToStream(Codeunit::System#Xml#DotNet_XslCompiledTransform@,InStream@,OutStream@)
commentId: O:Codeunit::System#Xml#XML DOM Management
name: '"XML DOM Management"'
uid: O:Codeunit::System#Xml#XML_DOM_Management
