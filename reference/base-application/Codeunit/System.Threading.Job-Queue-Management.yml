### YamlMime:BusinessCentralApplicationObject
fqName: System.Threading."Job Queue Management"
alId: ID 456
namespace: System.Threading
baseKind: Codeunit
kind: Codeunit
parent: N:Module::Base_Application::Namespace::System.Threading
langs:
- al
seeAlso:
- '[Codeunit](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-codeunit-object)'
methods:
- syntax:
    content: 'procedure CreateJobQueueEntry(var JobQueueEntry: Record "Job Queue Entry")'
    parameters:
    - id: JobQueueEntry
      parameterType:
        name: Record "Job Queue Entry"
        isExternal: true
  name: CreateJobQueueEntry
  uid: M:Codeunit::System#Threading#Job_Queue_Management.CreateJobQueueEntry(Job_Queue_Entry@)
- syntax:
    content: 'procedure DeleteJobQueueEntries(ObjectTypeToDelete: Option, ObjectIdToDelete: Integer)'
    parameters:
    - id: ObjectTypeToDelete
      parameterType:
        name: Option
        isExternal: true
    - id: ObjectIdToDelete
      parameterType:
        name: Integer
        isExternal: true
  name: DeleteJobQueueEntries
  uid: M:Codeunit::System#Threading#Job_Queue_Management.DeleteJobQueueEntries(Option,Integer)
- syntax:
    content: 'procedure StartInactiveJobQueueEntries(ObjectTypeToStart: Option, ObjectIdToStart: Integer)'
    parameters:
    - id: ObjectTypeToStart
      parameterType:
        name: Option
        isExternal: true
    - id: ObjectIdToStart
      parameterType:
        name: Integer
        isExternal: true
  name: StartInactiveJobQueueEntries
  uid: M:Codeunit::System#Threading#Job_Queue_Management.StartInactiveJobQueueEntries(Option,Integer)
- syntax:
    content: 'procedure SetJobQueueEntriesOnHold(ObjectTypeToSetOnHold: Option, ObjectIdToSetOnHold: Integer)'
    parameters:
    - id: ObjectTypeToSetOnHold
      parameterType:
        name: Option
        isExternal: true
    - id: ObjectIdToSetOnHold
      parameterType:
        name: Integer
        isExternal: true
  name: SetJobQueueEntriesOnHold
  uid: M:Codeunit::System#Threading#Job_Queue_Management.SetJobQueueEntriesOnHold(Option,Integer)
- syntax:
    content: 'procedure SetRecurringJobsOnHold(CompanyName: Text)'
    parameters:
    - id: CompanyName
      parameterType:
        name: Text
        isExternal: true
  name: SetRecurringJobsOnHold
  uid: M:Codeunit::System#Threading#Job_Queue_Management.SetRecurringJobsOnHold(Text)
- syntax:
    content: 'procedure SetStatusToOnHoldIfInstanceInactiveFor(PeriodType: Option, NoOfPeriods: Integer, ObjectTypeToSetOnHold: Option, ObjectIdToSetOnHold: Integer): Boolean'
    parameters:
    - id: PeriodType
      parameterType:
        name: Option
        isExternal: true
    - id: NoOfPeriods
      parameterType:
        name: Integer
        isExternal: true
    - id: ObjectTypeToSetOnHold
      parameterType:
        name: Option
        isExternal: true
    - id: ObjectIdToSetOnHold
      parameterType:
        name: Integer
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: SetStatusToOnHoldIfInstanceInactiveFor
  uid: M:Codeunit::System#Threading#Job_Queue_Management.SetStatusToOnHoldIfInstanceInactiveFor(Option,Integer,Option,Integer):Boolean
- syntax:
    content: 'procedure RunJobQueueEntryOnce(var SelectedJobQueueEntry: Record "Job Queue Entry")'
    parameters:
    - id: SelectedJobQueueEntry
      parameterType:
        name: Record "Job Queue Entry"
        isExternal: true
  name: RunJobQueueEntryOnce
  uid: M:Codeunit::System#Threading#Job_Queue_Management.RunJobQueueEntryOnce(Job_Queue_Entry@)
commentId: O:Codeunit::System#Threading#Job Queue Management
name: '"Job Queue Management"'
uid: O:Codeunit::System#Threading#Job_Queue_Management
