### YamlMime:BusinessCentralApplicationObject
fqName: System.IO."File Management"
alId: ID 419
namespace: System.IO
baseKind: Codeunit
kind: Codeunit
parent: N:Module::Base_Application::Namespace::System.IO
langs:
- al
seeAlso:
- '[Codeunit](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-codeunit-object)'
methods:
- syntax:
    content: 'procedure BLOBImport(TempBlob: __MissingTypeSymbol__, Name: Text): Text'
    parameters:
    - id: TempBlob
      parameterType:
        name: __MissingTypeSymbol__
        isExternal: true
    - id: Name
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: BLOBImport
  uid: M:Codeunit::System#IO#File_Management.BLOBImport(__MissingSymbol__@,Text):Text
- syntax:
    content: 'procedure BLOBImportWithFilter(TempBlob: __MissingTypeSymbol__, DialogCaption: Text, Name: Text, FileFilter: Text, ExtFilter: Text): Text'
    parameters:
    - id: TempBlob
      parameterType:
        name: __MissingTypeSymbol__
        isExternal: true
    - id: DialogCaption
      parameterType:
        name: Text
        isExternal: true
    - id: Name
      parameterType:
        name: Text
        isExternal: true
    - id: FileFilter
      parameterType:
        name: Text
        isExternal: true
    - id: ExtFilter
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: BLOBImportWithFilter
  uid: M:Codeunit::System#IO#File_Management.BLOBImportWithFilter(__MissingSymbol__@,Text,Text,Text,Text):Text
- syntax:
    content: 'procedure BLOBExportWithEncoding(TempBlob: __MissingTypeSymbol__, Name: Text, CommonDialog: Boolean, Encoding: TextEncoding): Text'
    parameters:
    - id: TempBlob
      parameterType:
        name: __MissingTypeSymbol__
        isExternal: true
    - id: Name
      parameterType:
        name: Text
        isExternal: true
    - id: CommonDialog
      parameterType:
        name: Boolean
        isExternal: true
    - id: Encoding
      parameterType:
        name: TextEncoding
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: BLOBExportWithEncoding
  uid: M:Codeunit::System#IO#File_Management.BLOBExportWithEncoding(__MissingSymbol__@,Text,Boolean,TextEncoding):Text
- syntax:
    content: 'procedure BLOBExport(TempBlob: __MissingTypeSymbol__, Name: Text, CommonDialog: Boolean): Text'
    parameters:
    - id: TempBlob
      parameterType:
        name: __MissingTypeSymbol__
        isExternal: true
    - id: Name
      parameterType:
        name: Text
        isExternal: true
    - id: CommonDialog
      parameterType:
        name: Boolean
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: BLOBExport
  uid: M:Codeunit::System#IO#File_Management.BLOBExport(__MissingSymbol__@,Text,Boolean):Text
- syntax:
    content: 'procedure Magicpath(): Text'
    return:
      returnType:
        name: Text
        isExternal: true
  name: Magicpath
  uid: M:Codeunit::System#IO#File_Management.Magicpath:Text
- syntax:
    content: 'procedure DownloadFromStreamHandler(FromInStream: InStream, DialogTitle: Text, ToFolder: Text, ToFilter: Text, ToFile: Text): Boolean'
    parameters:
    - id: FromInStream
      parameterType:
        name: InStream
        isExternal: true
    - id: DialogTitle
      parameterType:
        name: Text
        isExternal: true
    - id: ToFolder
      parameterType:
        name: Text
        isExternal: true
    - id: ToFilter
      parameterType:
        name: Text
        isExternal: true
    - id: ToFile
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: DownloadFromStreamHandler
  uid: M:Codeunit::System#IO#File_Management.DownloadFromStreamHandler(InStream,Text,Text,Text,Text):Boolean
- syntax:
    content: 'procedure ServerFileExists(FilePath: Text): Boolean'
    parameters:
    - id: FilePath
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: ServerFileExists
  uid: M:Codeunit::System#IO#File_Management.ServerFileExists(Text):Boolean
- syntax:
    content: 'procedure GetFileName(FilePath: Text): Text'
    parameters:
    - id: FilePath
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetFileName
  uid: M:Codeunit::System#IO#File_Management.GetFileName(Text):Text
- syntax:
    content: 'procedure GetSafeFileName(FileName: Text): Text'
    parameters:
    - id: FileName
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetSafeFileName
  uid: M:Codeunit::System#IO#File_Management.GetSafeFileName(Text):Text
- syntax:
    content: 'procedure GetPathWithSafeFileName(InFilePath: Text): Text'
    parameters:
    - id: InFilePath
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetPathWithSafeFileName
  uid: M:Codeunit::System#IO#File_Management.GetPathWithSafeFileName(Text):Text
- syntax:
    content: 'procedure GetFileNameWithoutExtension(FilePath: Text): Text'
    parameters:
    - id: FilePath
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetFileNameWithoutExtension
  uid: M:Codeunit::System#IO#File_Management.GetFileNameWithoutExtension(Text):Text
- syntax:
    content: 'procedure HasExtension(FilePath: Text): Boolean'
    parameters:
    - id: FilePath
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: HasExtension
  uid: M:Codeunit::System#IO#File_Management.HasExtension(Text):Boolean
- syntax:
    content: 'procedure GetFileNameMimeType(FileName: Text): Text'
    parameters:
    - id: FileName
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetFileNameMimeType
  uid: M:Codeunit::System#IO#File_Management.GetFileNameMimeType(Text):Text
- syntax:
    content: 'procedure GetDirectoryName(FileName: Text): Text'
    parameters:
    - id: FileName
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetDirectoryName
  uid: M:Codeunit::System#IO#File_Management.GetDirectoryName(Text):Text
- syntax:
    content: 'procedure CombinePath(BasePath: Text, Suffix: Text): Text'
    parameters:
    - id: BasePath
      parameterType:
        name: Text
        isExternal: true
    - id: Suffix
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: CombinePath
  uid: M:Codeunit::System#IO#File_Management.CombinePath(Text,Text):Text
- syntax:
    content: 'procedure GetToFilterText(FilterString: Text, FileName: Text): Text'
    parameters:
    - id: FilterString
      parameterType:
        name: Text
        isExternal: true
    - id: FileName
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetToFilterText
  uid: M:Codeunit::System#IO#File_Management.GetToFilterText(Text,Text):Text
- syntax:
    content: 'procedure GetExtension(Name: Text): Text'
    parameters:
    - id: Name
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetExtension
  uid: M:Codeunit::System#IO#File_Management.GetExtension(Text):Text
- syntax:
    content: 'procedure IsValidFileName(FileName: Text): Boolean'
    parameters:
    - id: FileName
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsValidFileName
  uid: M:Codeunit::System#IO#File_Management.IsValidFileName(Text):Boolean
- syntax:
    content: 'procedure ValidateFileExtension(FilePath: Text, ValidExtensions: Text)'
    parameters:
    - id: FilePath
      parameterType:
        name: Text
        isExternal: true
    - id: ValidExtensions
      parameterType:
        name: Text
        isExternal: true
  name: ValidateFileExtension
  uid: M:Codeunit::System#IO#File_Management.ValidateFileExtension(Text,Text)
- syntax:
    content: 'procedure CreateFileNameWithExtension(FileNameWithoutExtension: Text, Extension: Text): Text'
    parameters:
    - id: FileNameWithoutExtension
      parameterType:
        name: Text
        isExternal: true
    - id: Extension
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: CreateFileNameWithExtension
  uid: M:Codeunit::System#IO#File_Management.CreateFileNameWithExtension(Text,Text):Text
- syntax:
    content: 'procedure Ansi2SystemEncoding(Destination: OutStream, Source: InStream)'
    parameters:
    - id: Destination
      parameterType:
        name: OutStream
        isExternal: true
    - id: Source
      parameterType:
        name: InStream
        isExternal: true
  name: Ansi2SystemEncoding
  uid: M:Codeunit::System#IO#File_Management.Ansi2SystemEncoding(OutStream,InStream)
- syntax:
    content: 'procedure Ansi2SystemEncodingTxt(Destination: OutStream, Source: Text)'
    parameters:
    - id: Destination
      parameterType:
        name: OutStream
        isExternal: true
    - id: Source
      parameterType:
        name: Text
        isExternal: true
  name: Ansi2SystemEncodingTxt
  uid: M:Codeunit::System#IO#File_Management.Ansi2SystemEncodingTxt(OutStream,Text)
- syntax:
    content: 'procedure StripNotsupportChrInFileName(InText: Text): Text'
    parameters:
    - id: InText
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: StripNotsupportChrInFileName
  uid: M:Codeunit::System#IO#File_Management.StripNotsupportChrInFileName(Text):Text
- syntax:
    content: 'procedure IsAllowedPath(Path: Text, SkipError: Boolean): Boolean'
    parameters:
    - id: Path
      parameterType:
        name: Text
        isExternal: true
    - id: SkipError
      parameterType:
        name: Boolean
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsAllowedPath
  uid: M:Codeunit::System#IO#File_Management.IsAllowedPath(Text,Boolean):Boolean
- syntax:
    content: 'procedure AppendFileNameWithIndex(OriginalFileName: Text, AppendIndex: Integer): Text'
    parameters:
    - id: OriginalFileName
      parameterType:
        name: Text
        isExternal: true
    - id: AppendIndex
      parameterType:
        name: Integer
        isExternal: true
    return:
      returnType:
        name: Text
        isExternal: true
  name: AppendFileNameWithIndex
  uid: M:Codeunit::System#IO#File_Management.AppendFileNameWithIndex(Text,Integer):Text
commentId: O:Codeunit::System#IO#File Management
name: '"File Management"'
uid: O:Codeunit::System#IO#File_Management
