### YamlMime:BusinessCentralApplicationObject
fqName: Microsoft.Finance.VAT.Registration."VAT Registration Log Mgt."
alId: ID 249
namespace: Microsoft.Finance.VAT.Registration
baseKind: Codeunit
kind: Codeunit
parent: N:Module::Base_Application::Namespace::Microsoft.Finance.VAT.Registration
langs:
- al
seeAlso:
- '[Codeunit](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-codeunit-object)'
objectProperties:
- name: Permissions
  value: TableData "VAT Registration Log" = rimd
  promoted: false
methods:
- syntax:
    content: 'procedure LogCustomer(Customer: Record Customer)'
    parameters:
    - id: Customer
      parameterType:
        name: Record Customer
        isExternal: true
  name: LogCustomer
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.LogCustomer(Customer)
- syntax:
    content: 'procedure LogVendor(Vendor: Record Vendor)'
    parameters:
    - id: Vendor
      parameterType:
        name: Record Vendor
        isExternal: true
  name: LogVendor
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.LogVendor(Vendor)
- syntax:
    content: 'procedure LogContact(Contact: Record Contact)'
    parameters:
    - id: Contact
      parameterType:
        name: Record Contact
        isExternal: true
  name: LogContact
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.LogContact(Contact)
- syntax:
    content: 'procedure DeleteCustomerLog(Customer: Record Customer)'
    parameters:
    - id: Customer
      parameterType:
        name: Record Customer
        isExternal: true
  name: DeleteCustomerLog
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.DeleteCustomerLog(Customer)
- syntax:
    content: 'procedure DeleteVendorLog(Vendor: Record Vendor)'
    parameters:
    - id: Vendor
      parameterType:
        name: Record Vendor
        isExternal: true
  name: DeleteVendorLog
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.DeleteVendorLog(Vendor)
- syntax:
    content: 'procedure DeleteContactLog(Contact: Record Contact)'
    parameters:
    - id: Contact
      parameterType:
        name: Record Contact
        isExternal: true
  name: DeleteContactLog
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.DeleteContactLog(Contact)
- syntax:
    content: 'procedure AssistEditCustomerVATReg(Customer: Record Customer)'
    parameters:
    - id: Customer
      parameterType:
        name: Record Customer
        isExternal: true
  name: AssistEditCustomerVATReg
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.AssistEditCustomerVATReg(Customer)
- syntax:
    content: 'procedure CheckIfCountryCodeIsSet(Customer: Record Customer)'
    parameters:
    - id: Customer
      parameterType:
        name: Record Customer
        isExternal: true
  name: CheckIfCountryCodeIsSet
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.CheckIfCountryCodeIsSet(Customer)
- syntax:
    content: 'procedure AssistEditVendorVATReg(Vendor: Record Vendor)'
    parameters:
    - id: Vendor
      parameterType:
        name: Record Vendor
        isExternal: true
  name: AssistEditVendorVATReg
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.AssistEditVendorVATReg(Vendor)
- syntax:
    content: 'procedure AssistEditContactVATReg(Contact: Record Contact)'
    parameters:
    - id: Contact
      parameterType:
        name: Record Contact
        isExternal: true
  name: AssistEditContactVATReg
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.AssistEditContactVATReg(Contact)
- syntax:
    content: procedure AssistEditCompanyInfoVATReg()
  name: AssistEditCompanyInfoVATReg
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.AssistEditCompanyInfoVATReg
- syntax:
    content: 'procedure CheckVIESForVATNo(var RecordRef: RecordRef, var VATRegistrationLog: Record "VAT Registration Log", RecordVariant: Variant, EntryNo: Code[20], CountryCode: Code[10], AccountType: Option)'
    parameters:
    - id: RecordRef
      parameterType:
        name: RecordRef
        isExternal: true
    - id: VATRegistrationLog
      parameterType:
        name: Record "VAT Registration Log"
        isExternal: true
    - id: RecordVariant
      parameterType:
        name: Variant
        isExternal: true
    - id: EntryNo
      parameterType:
        name: Code[20]
        isExternal: true
    - id: CountryCode
      parameterType:
        name: Code[10]
        isExternal: true
    - id: AccountType
      parameterType:
        name: Option
        isExternal: true
  name: CheckVIESForVATNo
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.CheckVIESForVATNo(RecordRef@,VAT_Registration_Log@,Variant,Code[20],Code[10],Option)
- syntax:
    content: 'procedure CheckVIESForVATNoField(var RecordRef: RecordRef, var VATRegistrationLog: Record "VAT Registration Log", RecordVariant: Variant, EntryNo: Code[20], CountryCode: Code[10], AccountType: Option, VATNoFieldName: Text)'
    parameters:
    - id: RecordRef
      parameterType:
        name: RecordRef
        isExternal: true
    - id: VATRegistrationLog
      parameterType:
        name: Record "VAT Registration Log"
        isExternal: true
    - id: RecordVariant
      parameterType:
        name: Variant
        isExternal: true
    - id: EntryNo
      parameterType:
        name: Code[20]
        isExternal: true
    - id: CountryCode
      parameterType:
        name: Code[10]
        isExternal: true
    - id: AccountType
      parameterType:
        name: Option
        isExternal: true
    - id: VATNoFieldName
      parameterType:
        name: Text
        isExternal: true
  name: CheckVIESForVATNoField
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.CheckVIESForVATNoField(RecordRef@,VAT_Registration_Log@,Variant,Code[20],Code[10],Option,Text)
- syntax:
    content: 'procedure UpdateRecordFromVATRegLog(var RecordRef: RecordRef, RecordVariant: Variant, VATRegistrationLog: Record "VAT Registration Log")'
    parameters:
    - id: RecordRef
      parameterType:
        name: RecordRef
        isExternal: true
    - id: RecordVariant
      parameterType:
        name: Variant
        isExternal: true
    - id: VATRegistrationLog
      parameterType:
        name: Record "VAT Registration Log"
        isExternal: true
  name: UpdateRecordFromVATRegLog
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.UpdateRecordFromVATRegLog(RecordRef@,Variant,VAT_Registration_Log)
- syntax:
    content: procedure InitServiceSetup()
  name: InitServiceSetup
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.InitServiceSetup
- syntax:
    content: procedure SetupService()
  name: SetupService
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.SetupService
- syntax:
    content: procedure EnableService()
  name: EnableService
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.EnableService
- syntax:
    content: 'procedure ValidateVATRegNoWithVIES(var RecordRef: RecordRef, RecordVariant: Variant, EntryNo: Code[20], AccountType: Option, CountryCode: Code[10])'
    parameters:
    - id: RecordRef
      parameterType:
        name: RecordRef
        isExternal: true
    - id: RecordVariant
      parameterType:
        name: Variant
        isExternal: true
    - id: EntryNo
      parameterType:
        name: Code[20]
        isExternal: true
    - id: AccountType
      parameterType:
        name: Option
        isExternal: true
    - id: CountryCode
      parameterType:
        name: Code[10]
        isExternal: true
  name: ValidateVATRegNoWithVIES
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.ValidateVATRegNoWithVIES(RecordRef@,Variant,Code[20],Option,Code[10])
- syntax:
    content: 'procedure GetServiceDisclaimerUR(): Text'
    return:
      returnType:
        name: Text
        isExternal: true
  name: GetServiceDisclaimerUR
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.GetServiceDisclaimerUR:Text
- syntax:
    signatures:
    - '[EventSubscriber(Table,1400,OnRegisterServiceConnection,,False,False)]'
    content: 'procedure HandleViesRegisterServiceConnection(var ServiceConnection: Record "Service Connection" temporary)'
    parameters:
    - id: ServiceConnection
      parameterType:
        name: Record "Service Connection" temporary
        isExternal: true
  name: HandleViesRegisterServiceConnection
  uid: M:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#.HandleViesRegisterServiceConnection(Service_Connection@)
commentId: O:Codeunit::Microsoft#Finance#VAT#Registration#VAT Registration Log Mgt#
name: '"VAT Registration Log Mgt."'
uid: O:Codeunit::Microsoft#Finance#VAT#Registration#VAT_Registration_Log_Mgt#
