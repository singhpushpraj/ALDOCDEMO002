### YamlMime:BusinessCentralApplicationObject
fqName: System.Integration."Data Migration Facade Helper"
alId: ID 1797
namespace: System.Integration
baseKind: Codeunit
kind: Codeunit
parent: N:Module::Base_Application::Namespace::System.Integration
langs:
- al
seeAlso:
- '[Codeunit](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-codeunit-object)'
objectProperties:
- name: SingleInstance
  value: "True"
  promoted: false
methods:
- syntax:
    content: 'procedure CreateShipmentMethodIfNeeded(CodeToSet: Code[10], DescriptionToSet: Text[50]): Code[10]'
    parameters:
    - id: CodeToSet
      parameterType:
        name: Code[10]
        isExternal: true
    - id: DescriptionToSet
      parameterType:
        name: Text[50]
        isExternal: true
    return:
      returnType:
        name: Code[10]
        isExternal: true
  name: CreateShipmentMethodIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreateShipmentMethodIfNeeded(Code[10],Text[50]):Code[10]
- syntax:
    content: 'procedure CreateSalespersonPurchaserIfNeeded(CodeToSet: Code[20], NameToSet: Text[50], PhoneNoToSet: Text[30], EmailToSet: Text[80]): Code[20]'
    parameters:
    - id: CodeToSet
      parameterType:
        name: Code[20]
        isExternal: true
    - id: NameToSet
      parameterType:
        name: Text[50]
        isExternal: true
    - id: PhoneNoToSet
      parameterType:
        name: Text[30]
        isExternal: true
    - id: EmailToSet
      parameterType:
        name: Text[80]
        isExternal: true
    return:
      returnType:
        name: Code[20]
        isExternal: true
  name: CreateSalespersonPurchaserIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreateSalespersonPurchaserIfNeeded(Code[20],Text[50],Text[30],Text[80]):Code[20]
- syntax:
    content: 'procedure CreateCustomerPriceGroupIfNeeded(CodeToSet: Code[10], DescriptionToSet: Text[50], PriceIncludesVatToSet: Boolean): Code[10]'
    parameters:
    - id: CodeToSet
      parameterType:
        name: Code[10]
        isExternal: true
    - id: DescriptionToSet
      parameterType:
        name: Text[50]
        isExternal: true
    - id: PriceIncludesVatToSet
      parameterType:
        name: Boolean
        isExternal: true
    return:
      returnType:
        name: Code[10]
        isExternal: true
  name: CreateCustomerPriceGroupIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreateCustomerPriceGroupIfNeeded(Code[10],Text[50],Boolean):Code[10]
- syntax:
    content: 'procedure CreatePaymentTermsIfNeeded(CodeToSet: Code[10], DescriptionToSet: Text[50], DueDateCalculationToSet: DateFormula): Code[10]'
    parameters:
    - id: CodeToSet
      parameterType:
        name: Code[10]
        isExternal: true
    - id: DescriptionToSet
      parameterType:
        name: Text[50]
        isExternal: true
    - id: DueDateCalculationToSet
      parameterType:
        name: DateFormula
        isExternal: true
    return:
      returnType:
        name: Code[10]
        isExternal: true
  name: CreatePaymentTermsIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreatePaymentTermsIfNeeded(Code[10],Text[50],DateFormula):Code[10]
- syntax:
    content: 'procedure CreateTerritoryIfNeeded(CodeToSet: Code[10], Name: Text[50]): Code[10]'
    parameters:
    - id: CodeToSet
      parameterType:
        name: Code[10]
        isExternal: true
    - id: Name
      parameterType:
        name: Text[50]
        isExternal: true
    return:
      returnType:
        name: Code[10]
        isExternal: true
  name: CreateTerritoryIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreateTerritoryIfNeeded(Code[10],Text[50]):Code[10]
- syntax:
    content: 'procedure CreateTaxAreaIfNeeded(CodeToSet: Code[20], Description: Text[50]): Code[20]'
    parameters:
    - id: CodeToSet
      parameterType:
        name: Code[20]
        isExternal: true
    - id: Description
      parameterType:
        name: Text[50]
        isExternal: true
    return:
      returnType:
        name: Code[20]
        isExternal: true
  name: CreateTaxAreaIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreateTaxAreaIfNeeded(Code[20],Text[50]):Code[20]
- syntax:
    content: 'procedure CreatePaymentMethodIfNeeded(CodeToSet: Code[10], DescriptionToSet: Text[50]): Code[10]'
    parameters:
    - id: CodeToSet
      parameterType:
        name: Code[10]
        isExternal: true
    - id: DescriptionToSet
      parameterType:
        name: Text[50]
        isExternal: true
    return:
      returnType:
        name: Code[10]
        isExternal: true
  name: CreatePaymentMethodIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreatePaymentMethodIfNeeded(Code[10],Text[50]):Code[10]
- syntax:
    content: 'procedure DoesPostCodeExist(CodeToSearch: Code[20], CityToSearch: Text[30]): Boolean'
    parameters:
    - id: CodeToSearch
      parameterType:
        name: Code[20]
        isExternal: true
    - id: CityToSearch
      parameterType:
        name: Text[30]
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: DoesPostCodeExist
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.DoesPostCodeExist(Code[20],Text[30]):Boolean
- syntax:
    content: 'procedure CreatePostCodeIfNeeded(CodeToSet: Code[20], CityToSet: Text[30], CountyToSet: Text[30], CountryRegionCodeToSet: Code[10]): Boolean'
    parameters:
    - id: CodeToSet
      parameterType:
        name: Code[20]
        isExternal: true
    - id: CityToSet
      parameterType:
        name: Text[30]
        isExternal: true
    - id: CountyToSet
      parameterType:
        name: Text[30]
        isExternal: true
    - id: CountryRegionCodeToSet
      parameterType:
        name: Code[10]
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: CreatePostCodeIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreatePostCodeIfNeeded(Code[20],Text[30],Text[30],Code[10]):Boolean
- syntax:
    content: 'procedure CreateCountryIfNeeded(CodeToSet: Code[10], NameToSet: Text[50], AddressFormatToSet: Option, ContactAddressFormatToSet: Option): Code[10]'
    parameters:
    - id: CodeToSet
      parameterType:
        name: Code[10]
        isExternal: true
    - id: NameToSet
      parameterType:
        name: Text[50]
        isExternal: true
    - id: AddressFormatToSet
      parameterType:
        name: Option
        isExternal: true
    - id: ContactAddressFormatToSet
      parameterType:
        name: Option
        isExternal: true
    return:
      returnType:
        name: Code[10]
        isExternal: true
  name: CreateCountryIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreateCountryIfNeeded(Code[10],Text[50],Option,Option):Code[10]
- syntax:
    content: 'procedure SearchCountry(CodeToSearch: Code[10], NameToSearch: Text[50], EUCountryRegionCodeToSearch: Code[10], IntrastatCodeToSet: Code[10], var CodeToGet: Code[10]): Boolean'
    parameters:
    - id: CodeToSearch
      parameterType:
        name: Code[10]
        isExternal: true
    - id: NameToSearch
      parameterType:
        name: Text[50]
        isExternal: true
    - id: EUCountryRegionCodeToSearch
      parameterType:
        name: Code[10]
        isExternal: true
    - id: IntrastatCodeToSet
      parameterType:
        name: Code[10]
        isExternal: true
    - id: CodeToGet
      parameterType:
        name: Code[10]
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: SearchCountry
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.SearchCountry(Code[10],Text[50],Code[10],Code[10],Code[10]@):Boolean
- syntax:
    content: 'procedure SearchLanguage(AbbreviatedNameToSearch: Code[3], var CodeToGet: Code[10]): Boolean'
    parameters:
    - id: AbbreviatedNameToSearch
      parameterType:
        name: Code[3]
        isExternal: true
    - id: CodeToGet
      parameterType:
        name: Code[10]
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: SearchLanguage
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.SearchLanguage(Code[3],Code[10]@):Boolean
- syntax:
    content: 'procedure FixIfLcyCode(CurrencyCode: Code[10]): Code[10]'
    parameters:
    - id: CurrencyCode
      parameterType:
        name: Code[10]
        isExternal: true
    return:
      returnType:
        name: Code[10]
        isExternal: true
  name: FixIfLcyCode
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.FixIfLcyCode(Code[10]):Code[10]
- syntax:
    content: 'procedure CreateGeneralJournalBatchIfNeeded(GeneralJournalBatchCode: Code[10], NoSeriesCode: Code[20], PostingNoSeriesCode: Code[20])'
    parameters:
    - id: GeneralJournalBatchCode
      parameterType:
        name: Code[10]
        isExternal: true
    - id: NoSeriesCode
      parameterType:
        name: Code[20]
        isExternal: true
    - id: PostingNoSeriesCode
      parameterType:
        name: Code[20]
        isExternal: true
  name: CreateGeneralJournalBatchIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreateGeneralJournalBatchIfNeeded(Code[10],Code[20],Code[20])
- syntax:
    content: 'procedure CreateGeneralJournalLine(var GenJournalLine: Record "Gen. Journal Line", GeneralJournalBatchCode: Code[10], DocumentNo: Code[20], Description: Text[50], AccountType: Enum "Gen. Journal Account Type", AccountNo: Code[20], PostingDate: Date, DueDate: Date, Amount: Decimal, AmountLCY: Decimal, Currency: Code[10], BalancingAccount: Code[20])'
    parameters:
    - id: GenJournalLine
      parameterType:
        name: Record "Gen. Journal Line"
        isExternal: true
    - id: GeneralJournalBatchCode
      parameterType:
        name: Code[10]
        isExternal: true
    - id: DocumentNo
      parameterType:
        name: Code[20]
        isExternal: true
    - id: Description
      parameterType:
        name: Text[50]
        isExternal: true
    - id: AccountType
      parameterType:
        internalReference: O:Enum::Microsoft#Finance#GeneralLedger#Journal#Gen#_Journal_Account_Type
        name: Microsoft.Finance.GeneralLedger.Journal."Gen. Journal Account Type"
        isExternal: false
    - id: AccountNo
      parameterType:
        name: Code[20]
        isExternal: true
    - id: PostingDate
      parameterType:
        name: Date
        isExternal: true
    - id: DueDate
      parameterType:
        name: Date
        isExternal: true
    - id: Amount
      parameterType:
        name: Decimal
        isExternal: true
    - id: AmountLCY
      parameterType:
        name: Decimal
        isExternal: true
    - id: Currency
      parameterType:
        name: Code[10]
        isExternal: true
    - id: BalancingAccount
      parameterType:
        name: Code[20]
        isExternal: true
  name: CreateGeneralJournalLine
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreateGeneralJournalLine(Gen#_Journal_Line@,Code[10],Code[20],Text[50],Enum::Microsoft#Finance#GeneralLedger#Journal#Gen#_Journal_Account_Type,Code[20],Date,Date,Decimal,Decimal,Code[10],Code[20])
- syntax:
    content: 'procedure GetOrCreateDimension(DimensionCode: Code[20], DimensionDescription: Text[50], var Dimension: Record Dimension)'
    parameters:
    - id: DimensionCode
      parameterType:
        name: Code[20]
        isExternal: true
    - id: DimensionDescription
      parameterType:
        name: Text[50]
        isExternal: true
    - id: Dimension
      parameterType:
        name: Record Dimension
        isExternal: true
  name: GetOrCreateDimension
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.GetOrCreateDimension(Code[20],Text[50],Dimension@)
- syntax:
    content: 'procedure GetOrCreateDimensionValue(DimensionCode: Code[20], DimensionValueCode: Code[20], DimensionValueName: Text[50], var DimensionValue: Record "Dimension Value")'
    parameters:
    - id: DimensionCode
      parameterType:
        name: Code[20]
        isExternal: true
    - id: DimensionValueCode
      parameterType:
        name: Code[20]
        isExternal: true
    - id: DimensionValueName
      parameterType:
        name: Text[50]
        isExternal: true
    - id: DimensionValue
      parameterType:
        name: Record "Dimension Value"
        isExternal: true
  name: GetOrCreateDimensionValue
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.GetOrCreateDimensionValue(Code[20],Code[20],Text[50],Dimension_Value@)
- syntax:
    content: 'procedure CreateOnlyDefaultDimensionIfNeeded(DimensionCode: Code[20], DimensionValueCode: Code[20], TableId: Integer, EntityNo: Code[20])'
    parameters:
    - id: DimensionCode
      parameterType:
        name: Code[20]
        isExternal: true
    - id: DimensionValueCode
      parameterType:
        name: Code[20]
        isExternal: true
    - id: TableId
      parameterType:
        name: Integer
        isExternal: true
    - id: EntityNo
      parameterType:
        name: Code[20]
        isExternal: true
  name: CreateOnlyDefaultDimensionIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreateOnlyDefaultDimensionIfNeeded(Code[20],Code[20],Integer,Code[20])
- syntax:
    content: 'procedure CreateDimensionSetId(OldDimensionSetId: Integer, DimensionCode: Code[20], DimensionDescription: Text[50], DimensionValueCode: Code[20], DimensionValueName: Text[50]): Integer'
    parameters:
    - id: OldDimensionSetId
      parameterType:
        name: Integer
        isExternal: true
    - id: DimensionCode
      parameterType:
        name: Code[20]
        isExternal: true
    - id: DimensionDescription
      parameterType:
        name: Text[50]
        isExternal: true
    - id: DimensionValueCode
      parameterType:
        name: Code[20]
        isExternal: true
    - id: DimensionValueName
      parameterType:
        name: Text[50]
        isExternal: true
    return:
      returnType:
        name: Integer
        isExternal: true
  name: CreateDimensionSetId
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreateDimensionSetId(Integer,Code[20],Text[50],Code[20],Text[50]):Integer
- syntax:
    content: 'procedure CreateSourceCodeIfNeeded(SourceCodeCode: Code[10]): Code[10]'
    parameters:
    - id: SourceCodeCode
      parameterType:
        name: Code[10]
        isExternal: true
    return:
      returnType:
        name: Code[10]
        isExternal: true
  name: CreateSourceCodeIfNeeded
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.CreateSourceCodeIfNeeded(Code[10]):Code[10]
- syntax:
    content: 'procedure SetAlternativeContact(NameToSet: Text[50], AddressToSet: Text[50], Address2ToSet: Text[50], PostCodeToSet: Code[20], CityToSet: Text[30], CountryToSet: Code[10], EmailToset: Text[80], PhoneNoToSet: Text[30], FaxToSet: Text[30], MobileNoToSet: Text[30], LinkToTable: Integer, EntityNo: Code[20])'
    parameters:
    - id: NameToSet
      parameterType:
        name: Text[50]
        isExternal: true
    - id: AddressToSet
      parameterType:
        name: Text[50]
        isExternal: true
    - id: Address2ToSet
      parameterType:
        name: Text[50]
        isExternal: true
    - id: PostCodeToSet
      parameterType:
        name: Code[20]
        isExternal: true
    - id: CityToSet
      parameterType:
        name: Text[30]
        isExternal: true
    - id: CountryToSet
      parameterType:
        name: Code[10]
        isExternal: true
    - id: EmailToset
      parameterType:
        name: Text[80]
        isExternal: true
    - id: PhoneNoToSet
      parameterType:
        name: Text[30]
        isExternal: true
    - id: FaxToSet
      parameterType:
        name: Text[30]
        isExternal: true
    - id: MobileNoToSet
      parameterType:
        name: Text[30]
        isExternal: true
    - id: LinkToTable
      parameterType:
        name: Integer
        isExternal: true
    - id: EntityNo
      parameterType:
        name: Code[20]
        isExternal: true
  name: SetAlternativeContact
  uid: M:Codeunit::System#Integration#Data_Migration_Facade_Helper.SetAlternativeContact(Text[50],Text[50],Text[50],Code[20],Text[30],Code[10],Text[80],Text[30],Text[30],Text[30],Integer,Code[20])
commentId: O:Codeunit::System#Integration#Data Migration Facade Helper
name: '"Data Migration Facade Helper"'
uid: O:Codeunit::System#Integration#Data_Migration_Facade_Helper
