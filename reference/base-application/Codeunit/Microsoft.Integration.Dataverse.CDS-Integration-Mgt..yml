### YamlMime:BusinessCentralApplicationObject
fqName: Microsoft.Integration.Dataverse."CDS Integration Mgt."
alId: ID 7200
namespace: Microsoft.Integration.Dataverse
baseKind: Codeunit
kind: Codeunit
parent: N:Module::Base_Application::Namespace::Microsoft.Integration.Dataverse
langs:
- al
seeAlso:
- '[Codeunit](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-codeunit-object)'
objectProperties:
- name: Access
  value: Public
  promoted: false
- name: SingleInstance
  value: "True"
  promoted: false
methods:
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure TestConnection(): Boolean'
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: TestConnection
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.TestConnection:Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure ActivateConnection(): Boolean'
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: ActivateConnection
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.ActivateConnection:Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure RegisterConnection(): Boolean'
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: RegisterConnection
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.RegisterConnection:Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure IsIntegrationEnabled(): Boolean'
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsIntegrationEnabled
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.IsIntegrationEnabled:Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure IsBusinessEventsEnabled(): Boolean'
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsBusinessEventsEnabled
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.IsBusinessEventsEnabled:Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure IsConnectionActive(): Boolean'
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsConnectionActive
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.IsConnectionActive:Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure IsSolutionInstalled(): Boolean'
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsSolutionInstalled
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.IsSolutionInstalled:Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure IsSolutionInstalled(UniqueName: Text): Boolean'
    parameters:
    - id: UniqueName
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsSolutionInstalled
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.IsSolutionInstalled(Text):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure GetSolutionVersion(var Version: Text): Boolean'
    parameters:
    - id: Version
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: GetSolutionVersion
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.GetSolutionVersion(Text@):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure GetSolutionVersion(UniqueName: Text, var Version: Text): Boolean'
    parameters:
    - id: UniqueName
      parameterType:
        name: Text
        isExternal: true
    - id: Version
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: GetSolutionVersion
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.GetSolutionVersion(Text,Text@):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure CheckCompanyId(var RecRef: RecordRef): Boolean'
    parameters:
    - id: RecRef
      parameterType:
        name: RecordRef
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: CheckCompanyId
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.CheckCompanyId(RecordRef@):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure CheckOwningTeam(var RecRef: RecordRef): Boolean'
    parameters:
    - id: RecRef
      parameterType:
        name: RecordRef
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: CheckOwningTeam
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.CheckOwningTeam(RecordRef@):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure CheckOwningUser(var RecRef: RecordRef, UserId: Guid): Boolean'
    parameters:
    - id: RecRef
      parameterType:
        name: RecordRef
        isExternal: true
    - id: UserId
      parameterType:
        name: Guid
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: CheckOwningUser
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.CheckOwningUser(RecordRef@,Guid):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure CheckOwningUser(var RecRef: RecordRef, UserId: Guid, SkipBusinessUnitCheck: Boolean): Boolean'
    parameters:
    - id: RecRef
      parameterType:
        name: RecordRef
        isExternal: true
    - id: UserId
      parameterType:
        name: Guid
        isExternal: true
    - id: SkipBusinessUnitCheck
      parameterType:
        name: Boolean
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: CheckOwningUser
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.CheckOwningUser(RecordRef@,Guid,Boolean):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure HasCompanyIdField(TableId: Integer): Boolean'
    parameters:
    - id: TableId
      parameterType:
        name: Integer
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: HasCompanyIdField
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.HasCompanyIdField(Integer):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure ResetCompanyId(var RecRef: RecordRef): Boolean'
    parameters:
    - id: RecRef
      parameterType:
        name: RecordRef
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: ResetCompanyId
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.ResetCompanyId(RecordRef@):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure SetCompanyId(var RecRef: RecordRef): Boolean'
    parameters:
    - id: RecRef
      parameterType:
        name: RecordRef
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: SetCompanyId
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.SetCompanyId(RecordRef@):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure SetOwningTeam(var RecRef: RecordRef): Boolean'
    parameters:
    - id: RecRef
      parameterType:
        name: RecordRef
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: SetOwningTeam
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.SetOwningTeam(RecordRef@):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure SetOwningUser(var RecRef: RecordRef, UserId: Guid): Boolean'
    parameters:
    - id: RecRef
      parameterType:
        name: RecordRef
        isExternal: true
    - id: UserId
      parameterType:
        name: Guid
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: SetOwningUser
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.SetOwningUser(RecordRef@,Guid):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure SetOwningUser(var RecRef: RecordRef, UserId: Guid, SkipBusinessUnitCheck: Boolean): Boolean'
    parameters:
    - id: RecRef
      parameterType:
        name: RecordRef
        isExternal: true
    - id: UserId
      parameterType:
        name: Guid
        isExternal: true
    - id: SkipBusinessUnitCheck
      parameterType:
        name: Boolean
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: SetOwningUser
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.SetOwningUser(RecordRef@,Guid,Boolean):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure GetCDSCompany(var CDSCompany: Record "CDS Company"): Boolean'
    parameters:
    - id: CDSCompany
      parameterType:
        name: Record "CDS Company"
        isExternal: true
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: GetCDSCompany
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.GetCDSCompany(CDS_Company@):Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure GetCoupledBusinessUnitId(): Guid'
    return:
      returnType:
        name: Guid
        isExternal: true
  name: GetCoupledBusinessUnitId
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.GetCoupledBusinessUnitId:Guid
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure IsTeamOwnershipModelSelected(): Boolean'
    return:
      returnType:
        name: Boolean
        isExternal: true
  name: IsTeamOwnershipModelSelected
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.IsTeamOwnershipModelSelected:Boolean
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: procedure RegisterAssistedSetup()
  name: RegisterAssistedSetup
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.RegisterAssistedSetup
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: procedure ResetCache()
  name: ResetCache
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.ResetCache
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure GetOptionSetMetadata(EntityName: Text, FieldName: Text): Dictionary of [Integer, Text]'
    parameters:
    - id: EntityName
      parameterType:
        name: Text
        isExternal: true
    - id: FieldName
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Dictionary of [Integer, Text]
        isExternal: true
  name: GetOptionSetMetadata
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.GetOptionSetMetadata(Text,Text):Dictionary_of_[Integer,Text]
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure InsertOptionSetMetadata(EntityName: Text, FieldName: Text, NewOptionLabel: Text): Integer'
    parameters:
    - id: EntityName
      parameterType:
        name: Text
        isExternal: true
    - id: FieldName
      parameterType:
        name: Text
        isExternal: true
    - id: NewOptionLabel
      parameterType:
        name: Text
        isExternal: true
    return:
      returnType:
        name: Integer
        isExternal: true
  name: InsertOptionSetMetadata
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.InsertOptionSetMetadata(Text,Text,Text):Integer
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure InsertOptionSetMetadataWithOptionValue(EntityName: Text, FieldName: Text, NewOptionLabel: Text, NewOptionValue: Integer): Integer'
    parameters:
    - id: EntityName
      parameterType:
        name: Text
        isExternal: true
    - id: FieldName
      parameterType:
        name: Text
        isExternal: true
    - id: NewOptionLabel
      parameterType:
        name: Text
        isExternal: true
    - id: NewOptionValue
      parameterType:
        name: Integer
        isExternal: true
    return:
      returnType:
        name: Integer
        isExternal: true
  name: InsertOptionSetMetadataWithOptionValue
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.InsertOptionSetMetadataWithOptionValue(Text,Text,Text,Integer):Integer
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    content: 'procedure UpdateOptionSetMetadata(EntityName: Text, FieldName: Text, OptionValue: Integer, NewOptionLabel: Text)'
    parameters:
    - id: EntityName
      parameterType:
        name: Text
        isExternal: true
    - id: FieldName
      parameterType:
        name: Text
        isExternal: true
    - id: OptionValue
      parameterType:
        name: Integer
        isExternal: true
    - id: NewOptionLabel
      parameterType:
        name: Text
        isExternal: true
  name: UpdateOptionSetMetadata
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.UpdateOptionSetMetadata(Text,Text,Integer,Text)
events:
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: procedure OnBeforeRegisterConnection()
  name: OnBeforeRegisterConnection
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnBeforeRegisterConnection
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: procedure OnAfterRegisterConnection()
  name: OnAfterRegisterConnection
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnAfterRegisterConnection
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: procedure OnBeforeUnregisterConnection()
  name: OnBeforeUnregisterConnection
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnBeforeUnregisterConnection
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: procedure OnAfterUnregisterConnection()
  name: OnAfterUnregisterConnection
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnAfterUnregisterConnection
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: procedure OnBeforeActivateConnection()
  name: OnBeforeActivateConnection
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnBeforeActivateConnection
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: procedure OnAfterActivateConnection()
  name: OnAfterActivateConnection
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnAfterActivateConnection
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: procedure OnEnableIntegration()
  name: OnEnableIntegration
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnEnableIntegration
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: procedure OnDisableIntegration()
  name: OnDisableIntegration
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnDisableIntegration
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: 'procedure OnGetIntegrationRequiredRoles(var RequiredRoleIdList: List of [Guid])'
    parameters:
    - id: RequiredRoleIdList
      parameterType:
        name: List of [Guid]
        isExternal: true
  name: OnGetIntegrationRequiredRoles
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnGetIntegrationRequiredRoles(List_of_[Guid]@)
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: 'procedure OnGetIntegrationSolutions(var SolutionUniqueNameList: List of [Text])'
    parameters:
    - id: SolutionUniqueNameList
      parameterType:
        name: List of [Text]
        isExternal: true
  name: OnGetIntegrationSolutions
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnGetIntegrationSolutions(List_of_[Text]@)
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: 'procedure OnGetDetailedLoggingEnabled(var Enabled: Boolean)'
    parameters:
    - id: Enabled
      parameterType:
        name: Boolean
        isExternal: true
  name: OnGetDetailedLoggingEnabled
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnGetDetailedLoggingEnabled(Boolean@)
- syntax:
    signatures:
    - '[Scope(Cloud)]'
    - '[IntegrationEvent(False,False)]'
    content: 'procedure OnHasCompanyIdField(TableId: Integer, var HasField: Boolean)'
    parameters:
    - id: TableId
      parameterType:
        name: Integer
        isExternal: true
    - id: HasField
      parameterType:
        name: Boolean
        isExternal: true
  name: OnHasCompanyIdField
  uid: M:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#.OnHasCompanyIdField(Integer,Boolean@)
commentId: O:Codeunit::Microsoft#Integration#Dataverse#CDS Integration Mgt#
name: '"CDS Integration Mgt."'
uid: O:Codeunit::Microsoft#Integration#Dataverse#CDS_Integration_Mgt#
